% MC_nSubjects_sim

nSubjects = 1;
nTrials = 1000;

% from, what parameter values, etc

bRandom = 1; % generate random parameters for the gamma densities
randBounds = [1 4]; % sets minimum value and range for shape parameter
bSmall_scale = 1; %

for ind = 1:nSubjects
    
    if bRandom
        if bSmall_scale
            g1(ind,:) = rand(1,2).*[diff(randBounds), diff(randBounds)] + randBounds(1);
            g2(ind,:) = rand(1,2).*[diff(randBounds), diff(randBounds)] + randBounds(1);
        else
            g1(ind,:) = rand(1,2).*[diff(randBounds), 4*diff(randBounds)] + randBounds(1);
            g2(ind,:) = rand(1,2).*[diff(randBounds), 4*diff(randBounds)] + randBounds(1);
        end
    else
    
    g1 = [1.45 3.26]; g2 = [2.08 5.12]; % for paper
    %g1 = [2 2]; g2 = [2 5];
    
    end
    %opt.T = 20; opt.m = 12;
    %BUF(ind,:) = make_fourier_buildup_function([g1(ind,:) g2(ind,:)],opt,1);
    
    xax = 0:.1:30;
    g1pdf = gampdf(xax,g1(1),g1(2));
    %figure; plot(xax,g1pdf);
    
    g2pdf = gampdf(xax,g2(1),g2(2));
    %figure; plot(xax,g2pdf);
    
    nSwitches = 15; Durs(nSwitches*nTrials,2)=0;
    
    for tInd = 1:nTrials
       
        [Durs(((tInd-1) * nSwitches+1):(tInd*nSwitches) ,:)]=...
            [0 0 ; make_2gamma_distrs(g1(ind,:),g2(ind,:),nSwitches-1)]; %nSwitches has to be odd
        
        
        
    end
    

    betweenSubjsDurs{ind} = Durs;
    
%% using BUF to predict the gamma pars 

 [BUFta,taxta] = make_trial_averaged_BUF(Durs,.01,15);
 [bufpars_fit BUFfit t] = find_fourier_BUF_fit(BUFta,taxta);
 bigFigure; subplot(1,2,1);
 plot(taxta,BUFta,'b',t,BUFfit,'r--');
 axis([0 15 0 1]);  mk_Nice_Plot; title(['LSE fit for BUF '...
     num2str(g1(ind,:)) '|' num2str(g2(ind,:)) ', found ' num2str(bufpars_fit)]);
 
 
 durs1S = Durs(Durs(:,2)==1,1); durs2S = Durs(Durs(:,2)==2,1);
 subplot(2,2,2);
 
 [count bin] = hist(durs1S); bar(bin,count,1); hold on;
scale = max(unique(diff(bin)));
x = linspace(0,max(durs1S)+2,200);
y = gampdf(x,bufpars_fit(1),bufpars_fit(2));
plot(x,y*length(durs1S)*scale,'r--'); mk_Nice_Plot;
xlabel('duration (s)')
 
 [g1_mle CI_gam1] = gamfit(durs1S); disp(CI_gam1); text(30,1000,num2str(CI_gam1))
 hold on; plot(xax,g1pdf*length(durs1S)*scale,'Color',[.2 .2 .2]);
 legend(sprintf('%d samples',length(durs1S)),['found k = ' ...
     num2str(bufpars_fit(1)) ', \theta = ' num2str(bufpars_fit(2))],
    ['true k = ' num2str(g1(1) ', \theta = ' num2str(g1(2)]));
 subplot(2,2,4);
 
 [count bin] = hist(durs2S); bar(bin,count,1); hold on;
scale = max(unique(diff(bin)));
x = linspace(0,max(durs2S)+2,200);
y = gampdf(x,bufpars_fit(3),bufpars_fit(4));
plot(x,y*length(durs2S)*scale,'r--'); mk_Nice_Plot;
xlabel('duration (s)')
 
 [g2_mle CI_gam2] = gamfit(durs2S); disp(CI_gam2); text(30,1000,num2str(CI_gam2));
 hold on; plot(xax,g2pdf,'Color',[.2 .2 .2]);
 legend(sprintf('%d samples',length(durs2S)),sprintf('found k = %2.2f \theta = %2.2f', ...
     bufpars_fit(3:4)), sprintf('true k = %2.2f \theta = %2.2f',g2));
 
disp(bufpars_fit) 

    
end
%% now let's smash that all onto one graph:
    
    Durs_tot = vertcat(betweenSubjsDurs{:});
    durs1_tot = Durs_tot(Durs_tot(:,2)==1,1); 
    durs2_tot = Durs_tot(Durs_tot(:,2)==2,2);
    
    BUFtot = make_trial_averaged_BUF(Durs_tot,.01,15);
     [bufpars_tot BUFfit_tot t] = find_fourier_BUF_fit(BUFta,taxta);
    bigFigure; subplot(1,2,1);
    plot(taxta,BUFta,'b',t,BUFfit,'r--');
     axis([0 10 0 1]);  mk_Nice_Plot;
     
     subplot(2,2,2);
 plot_gamma_hist_fit(durs1_tot,bufpars_tot(1:2)); title(['All Subjects ']);
 [g1 CI_gam1] = gamfit(durs1S); disp(CI_gam1)
 subplot(2,2,4);
 plot_gamma_hist_fit(durs2S,bufpars_fit(3:4))
 [g2 CI_gam2] = gamfit(durs2S); disp(CI_gam2)
 
 %% convergence of MC sims and BUF solution
  [BUFta,taxta] = make_trial_averaged_BUF(Durs,.01,15);
  bufpars = [g1 g2]; [BUFarp taxarp] = make_fourier_buildup_function(bufpars);
  
  gray = [.3 .3 .3];
  
  bigFigure; subplot(1,2,2);
 plot(taxta,BUFta,'b.'); hold on;
 plot(taxarp,BUFarp,'r');
 axis([0 15 0 1]);  mk_Nice_Plot; title('Monte Carlo and Analytical Buildup Functions');
 xlabel('time (s)'); ylabel('probability "split"')
 
between_trials = find(Durs(:,2)==0);
last_durns = between_trials(2:end)-1;

durs_complete = Durs; durs_complete (last_durns,:) = [];

durs1 = Durs(Durs(:,2) == 1,1);
durs2 = Durs(Durs(:,2) == 2,1);

  xax = 0:.1:50;
    g1pdf = gampdf(xax,g1(1),g1(2));
    
    g2pdf = gampdf(xax,g2(1),g2(2));
    
    
    
 subplot(2,2,1); hold off
 [count bin] = hist(durs1); bar(bin,count/sum(count)/max(diff(bin)),1);hold on; 
 plot(xax,g1pdf,'Color',gray); mk_Nice_Plot
 xlim([0 50]); xlabel('grouped percept durations (s)')
 
 subplot(2,2,3); hold off
 [count bin] = hist(durs2); bar(bin,count/sum(count)/max(diff(bin)),1);hold on; 
 plot(xax,g2pdf,'Color',gray); mk_Nice_Plot
 xlim([0 50]); xlabel('split percept durations (s)')  
 
 
    